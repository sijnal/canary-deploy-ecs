name: Deploy to ECS Canary
run-name: ${{ github.actor }} start workflow

on:
  push:
    branches:
      - main

jobs:
  create-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Iniciar sesión en AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
    
      - name: Crear, etiquetar y enviar imágen a AWS ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: test-nginx
          IMAGE_TAG: 7
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG


      - name: Obtener definición de tarea 
        run: |
          aws ecs describe-task-definition \
            --task-definition test-ecs-task \
            --query 'taskDefinition' \
            --output json > current-task-definition.json

      - name: Actualizar defición de tarea
        run: |
          IMAGE_URI="${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}" \
          jq '.containerDefinitions[0].image = "'$IMAGE_URI'"' current-task-definition.json > updated-task-definition.json

      
      - name: Registrar definición de tarea
        run: |
          NEW_TASK_DEF_ARN=$(aws ecs register-task-definition --cli-input-json file://updated-task-definition.json --query "taskDefinition.taskDefinitionArn" --output text)
          echo "NEW_TASK_DEF_ARN=$NEW_TASK_DEF_ARN" >> $GITHUB_ENV

      - name: Update ECS service to use new task definition
        run: |
          aws ecs update-service \
            --cluster test-cluster \
            --service test-svc \
            --task-definition ${{ env.NEW_TASK_DEF_ARN }}
        