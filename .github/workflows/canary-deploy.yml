name: Deploy to ECS Canary

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Build Docker image
        run: |
          IMAGE_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-simple-nginx
          docker build -t $IMAGE_URI:${{ github.sha }} .
          echo "IMAGE_URI=$IMAGE_URI:${{ github.sha }}" >> $GITHUB_ENV

      - name: Push Docker image to Amazon ECR
        run: |
          docker push ${{ env.IMAGE_URI }}

      - name: Register new task definition revision
        run: |
          aws ecs register-task-definition \
            --family nginx_simple_task \
            --execution-role-arn arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/ecsTaskExecutionRole \
            --network-mode awsvpc \
            --requires-compatibilities FARGATE \
            --cpu "256" \
            --memory "512" \
            --container-definitions '[{
                "name": "nginx-container",
                "image": "${{ env.IMAGE_URI }}",
                "portMappings": [
                    {
                        "containerPort": 80,
                        "hostPort": 80,
                        "protocol": "tcp"
                    }
                ],
                "essential": true,
                "logConfiguration": {
                    "logDriver": "awslogs",
                    "options": {
                        "awslogs-group": "/ecs/nginx_simple_task",
                        "awslogs-region": "'"${{ secrets.AWS_REGION }}"'",
                        "awslogs-stream-prefix": "ecs"
                    }
                }
            }]'

      - name: Update ECS service to use new task definition
        run: |
          NEW_TASK_DEF_ARN=$(aws ecs list-task-definitions --family-prefix nginx_simple_task --query "taskDefinitionArns[-1]" --output text)
          aws ecs update-service \
            --cluster ${{ secrets.ECS_CLUSTER }} \
            --service ${{ secrets.ECS_SERVICE }} \
            --task-definition $NEW_TASK_DEF_ARN
